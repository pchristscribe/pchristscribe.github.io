<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>P. Christopher Schreiber&#39;s</title>
  
  
  <link href="https://pchristscribe.github.io/atom.xml" rel="self"/>
  
  <link href="https://pchristscribe.github.io/"/>
  <updated>2023-02-14T19:11:39.000Z</updated>
  <id>https://pchristscribe.github.io/</id>
  
  <author>
    <name>P. Christopher Schreiber</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Django Models</title>
    <link href="https://pchristscribe.github.io/2023/02/14/Django-Models/"/>
    <id>https://pchristscribe.github.io/2023/02/14/Django-Models/</id>
    <published>2023-02-14T19:11:39.000Z</published>
    <updated>2023-02-14T19:11:39.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Django-Models"><a href="#Django-Models" class="headerlink" title="Django Models"></a>Django Models</h3><p>My team, The Undefined Variables, decided to make a sample ecommerce website for our Capstone&#x2F;WOW Project.  This is the models.py from the app.  It’s only 54 Lines of code.  More hours of frustration, debate went into those 54 lines than I ever possibly could have imagined. It still wasn’t perfect; I can look at this within a few seconds and see five things that I would want to change. But when working as a team we must make compromises and I often had to defer.  I’m still quite proud of how it turned out.  Check the whole project out here.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tag</span>(models.Model):</span><br><span class="line">    <span class="built_in">type</span> = models.CharField(max_length=<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.<span class="built_in">type</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># addressee indicates the recipient of the order not necessarily the person placing the order.</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Addressee</span>(models.Model):</span><br><span class="line">    name = models.CharField(max_length=<span class="number">40</span>)</span><br><span class="line">    address = models.CharField(max_length=<span class="number">120</span>)</span><br><span class="line">    city = models.CharField(max_length=<span class="number">30</span>)</span><br><span class="line">    state = models.CharField(max_length=<span class="number">2</span>)</span><br><span class="line">    zipcode = models.CharField(max_length=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Product</span>(models.Model):</span><br><span class="line">    types = models.ManyToManyField(Tag)</span><br><span class="line">    name = models.CharField(max_length=<span class="number">30</span>)</span><br><span class="line">    description = models.CharField(max_length=<span class="number">200</span>, null=<span class="literal">True</span>)</span><br><span class="line">    image = models.ImageField(null=<span class="literal">True</span>)</span><br><span class="line">    price = models.DecimalField()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Order</span>(models.Model):</span><br><span class="line">    STATUS = (</span><br><span class="line">        (<span class="string">&quot;Pending&quot;</span>, <span class="string">&quot;Pending&quot;</span>),</span><br><span class="line">        (<span class="string">&quot;Out for delivery&quot;</span>, <span class="string">&quot;Out for delivery&quot;</span>),</span><br><span class="line">        (<span class="string">&quot;Delivered&quot;</span>, <span class="string">&quot;Delivered&quot;</span>),</span><br><span class="line">    )</span><br><span class="line">    addressee = models.ForeignKey(Addressee, on_delete=models.SET_NULL, null=<span class="literal">True</span>)</span><br><span class="line">    date = models.DateTimeField(auto_now_add=<span class="literal">True</span>)</span><br><span class="line">    status = models.CharField(</span><br><span class="line">        max_length=<span class="number">200</span>, null=<span class="literal">True</span>, choices=STATUS, default=<span class="string">&quot;pending&quot;</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_order_items</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.orderitem_set.<span class="built_in">all</span>()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_total</span>(<span class="params">self</span>):</span><br><span class="line">        orderitems = self.orderitem_set.<span class="built_in">all</span>()</span><br><span class="line">        total = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> orderitems:</span><br><span class="line">            total += item.product.price * item.quantity</span><br><span class="line">        <span class="keyword">return</span> total</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">OrderItem</span>(models.Model):</span><br><span class="line">    product = models.ForeignKey(Product, on_delete=models.SET_NULL, null=<span class="literal">True</span>)</span><br><span class="line">    order = models.ForeignKey(Order, on_delete=models.CASCADE)</span><br><span class="line">    quantity = models.IntegerField(default=<span class="number">0</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_total</span>(<span class="params">self</span>):</span><br><span class="line">        total = self.product.price * self.quantity</span><br><span class="line">        <span class="keyword">return</span> total</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Django-Models&quot;&gt;&lt;a href=&quot;#Django-Models&quot; class=&quot;headerlink&quot; title=&quot;Django Models&quot;&gt;&lt;/a&gt;Django Models&lt;/h3&gt;&lt;p&gt;My team, The Undefined Var</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://pchristscribe.github.io/2023/02/10/hello-world/"/>
    <id>https://pchristscribe.github.io/2023/02/10/hello-world/</id>
    <published>2023-02-11T00:24:31.055Z</published>
    <updated>2023-02-11T00:24:31.055Z</updated>
    
    
    
    
    
  </entry>
  
</feed>
